This is just a jumble of notes right now!! :D

If you follwed the README.md you are on the controller node. 
Now we need to setup networking and an image we can boot

[root@controller ]$ nova keypair-add default_key > /home/vagrant/default_key.pem
[root@controller ]$ eval $(ssh-agent)
[root@controller ]$ ssh-add /vagrant/default_key.pem
[root@controller ]$ source /root/keystonerc_admin
[root@controller vagrant(keystone_admin)]# ./setup-neutron #you should look at this file first. its probably all wrong
(if something goes wrong here, you can tear down networking with ./delete_network)

For outgoing traffic to work from a spawned vm, I needed to configure br-ex on the Network node
(example configs are ifcfg-eth1-compute and ifcfg-br-ex   in /vagrant)
and change the default route on the Network node (hostname compute) (something like below)

[root@compute vagrant]# ip route del default
[root@compute vagrant]# ip route add default via 192.168.1.1

Get a minimal machine to boot
[root@controller vagrant(keystone_admin)]# glance image-create \
  --copy-from http://download.cirros-cloud.net/0.3.1/cirros-0.3.1-x86_64-disk.img \
  --is-public true \
  --container-format bare \
  --disk-format qcow2 \
  --name cirros

Make a minimal image flavor
[root@controller vagrant(keystone_admin)]# nova flavor-create m1.nano auto 128 1 1
Get the net-id and boot the image 
[root@controller ~(keystone_admin)]# nova net-list
+--------------------------------------+----------+------+
| ID                                   | Label    | CIDR |
+--------------------------------------+----------+------+
| ea55cb47-904e-4e12-b4f5-9a850037c66e | ext-net  | None |
| 624e3966-9dc9-450a-8177-8cc88938d0a5 | demo-net | None |
+--------------------------------------+----------+------+
[root@controller vagrant(keystone_admin)]# \
nova boot --flavor m1.tiny --image cirros --nic net-id="external net id" --security-group default --key-name default_key test0
default root password is "cubswin:)"

Give the machine an ip.

nova floating-ip-create ext-net
nova add-floating-ip vm_teste 192.168.1.12

(on the network node)
ip addr add 192.168.1.0/24 dev br-ex
iptables -t nat -I POSTROUTING 1 -s 192.168.1.0/24 -j MASQUERADE

Okay, I imagined that I could ssh to the machine now. but that part doesnt work. after I add the ip its still not routable, you can ssh into the machine and see that it has outbound access like this ->

router=$(ip netns | grep router)
ip netns exec $router ssh cirros@192.168.1.12

ip netns exec qrouter-5c1e1954-0ff0-455b-aafc-e0bb7003aa46 ssh ubuntu@10.0.0.4
ip netns exec qrouter-7543dee7-f042-4355-8076-09ad407b6078 ping 172.16.13.3 

So there are some things to fix :D


Caveats: 
virtualbox does not support nested VT https://www.virtualbox.org/ticket/4032 
on compute node(s) you must run /vagrant/switch_to_qemu.sh after running packstack (this is hooked in the script RunPackstack so it should just work)

This is here incase something happens to eth0 on your vagrant nodes. This is the interface vagrant uses to provision the nodes. and is also the default natted gateway.
To switch to eth1 as your gateway (bridged interface) we can do something like
ip route del default
ip route add default via 192.168.1.1 (assuming this is your laptops gateway)


add /etc/sysconfig/network-scripts/ifcfg-eth0 
#VAGRANT-BEGIN
# The contents below are automatically generated by Vagrant. Do not modify.
BOOTPROTO=dhcp
ONBOOT=yes
DEVICE=eth0
#VAGRANT-END

Warning: NetworkManager is active on 10.0.2.15. OpenStack networking currently does not work on systems that have the Network Manager service enabled. (I purged NetworkManger in the included image, and in the provision script (prepare.sh)

vagrant provision, and vagrant reload --provision.


#Some VM urls. the cirros one is good for memory constrained environemnts 
http://uec-images.ubuntu.com/trusty/current/trusty-server-cloudimg-amd64-disk1.img 
http://download.cirros-cloud.net/0.3.1/cirros-0.3.1-x86_64-disk.img

To repackage your vagrant image (create a new base image)

vagrant package --base Alpha_controller_1416326376700_64451 --output ~/lf/Vagrants/controller.box
vagrant package --base Alpha_compute_1416326892789_4367 --output ~/lf/Vagrants/compute.box


Links:
https://github.com/raphapr/rdo-packstack-installation
http://jackkozik.com/
